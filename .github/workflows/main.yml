name: Prisma Cloud Shift Left demo
on: [ push,pull_request ]

jobs:
  prisma_cloud_job:
    runs-on: ubuntu-latest
    name: Run Prisma Cloud steps 
    env:
          TL_USER: ${{ secrets.TL_USER }}
          TL_PASS: ${{ secrets.TL_PASS }}
          TL_CONSOLE: ${{ secrets.TL_CONSOLE }}
          BYPASS_REPOSCAN: 0
          BYPASS_OSS_LICENSE: 0
          BYPASS_IMAGESCAN: 0
          BYPASS_WF: 0
          BYPASS_SANDBOX: 0
          PROJECT_ID: ${{ secrets.GKE_PROJECT }}
          GKE_CLUSTER:  itresoldi-gke-pcc
    steps:
    
      - name: Checkout
        uses: actions/checkout@v2
    
      - name: twistcli download
        run: curl -s -k -u $TL_USER:$TL_PASS "https://$TL_CONSOLE/api/v1/util/twistcli" -v -o twistcli;chmod +x twistcli

      - name: Repo Vulnerability scan 
        run: bash ./files/repoScan.sh

      - name: OSS License Check 
        run: bash ./files/licenseCheck.sh

      - name: Apply security policies (Policy-as-Code) for evilpetclinic Application
        run: bash ./files/addPolicies.sh
      
      - name: Scan Image for vulnerabilities
        run: bash ./files/scanImage.sh
      
      - name: Scan Image for Malware using Wildfire
        run: bash ./files/malwareCheck.sh
        
      - name: Sandbox Runtime Scanning of Image
        run: bash ./files/sandboxscan.sh
        
      - name: Run Bridgecrew/Checkov IaC scanning action
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          api-key: ${{ secrets.BRIDGECREW_API_KEY }}
          directory: ./files
          soft_fail: true # optional: do not return an error code if there are failed checks
          framework: kubernetes # optional: run only on a specific infrastructure {cloudformation,terraform,kubernetes,all}
          quiet: true
          output_format: github_failed_only # optional: the output format, one of: cli, json, junitxml, github_failed_only
          log_level: WARNING # optional: set log level. Default WARNING
          
      - name: Deploy evilpetclinic Application
        run: bash ./deploy.sh
        
      - name: Execute Runtime attacks
        run: bash ./runtime_attacks.sh
          
      - name: Execute WAAS attacks
        run: bash ./waas_attacks.sh
